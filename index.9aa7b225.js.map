{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","src/modules/helpers.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\"use strict\";\nvar $9ad875e4360a0fe3$exports = {};\n\"use strict\";\nfunction $9ad875e4360a0fe3$var$getRandomIndex(num) {\n    return Math.floor(Math.random() * num);\n}\nfunction $9ad875e4360a0fe3$var$createFreeNumber(min, max) {\n    return Math.random() < 0.9 ? min : max;\n}\n$9ad875e4360a0fe3$exports = {\n    getRandomIndex: $9ad875e4360a0fe3$var$getRandomIndex,\n    createFreeNumber: $9ad875e4360a0fe3$var$createFreeNumber\n};\n\n\nvar $3d28d7f1aac198f5$var$getRandomIndex = $9ad875e4360a0fe3$exports.getRandomIndex, $3d28d7f1aac198f5$var$createFreeNumber = $9ad875e4360a0fe3$exports.createFreeNumber;\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.state = [];\n        if (initialState) this.state = initialState;\n        else for(var i = 0; i < 4; i++)this.state.push(new Array(4).fill(0));\n        this.status = \"idle\";\n        this.score = 0;\n        this.initialState = JSON.parse(JSON.stringify(this.state));\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                for(var i = 0; i < 2; i++)Game.fillRandomCell(this.state);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = JSON.parse(JSON.stringify(this.initialState));\n                this.status = \"idle\";\n                this.score = 0;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var state = this.state;\n                var prevState = JSON.parse(JSON.stringify(state));\n                Game.moveFilledCellsRight(state);\n                for(var i = 0; i < state.length; i++){\n                    var row = state[i];\n                    for(var j = row.length - 1; j > 0; j--)if (row[j] === row[j - 1] && row[j] !== 0) {\n                        row[j - 1] = 0;\n                        row[j] *= 2;\n                        this.score += row[j];\n                    }\n                }\n                Game.moveFilledCellsRight(state);\n                Game.checkAfterMove(this, prevState, state);\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var state = this.state;\n                var prevState = JSON.parse(JSON.stringify(state));\n                Game.moveFilledCellsLeft(state);\n                for(var i = 0; i < state.length; i++){\n                    var row = state[i];\n                    for(var j = 0; j < row.length - 1; j++)if (row[j] === row[j + 1] && row[j] !== 0) {\n                        row[j] *= 2;\n                        row[j + 1] = 0;\n                        this.score += row[j];\n                    }\n                }\n                Game.moveFilledCellsLeft(state);\n                Game.checkAfterMove(this, prevState, state);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status !== \"playing\") return;\n                var state = this.state;\n                var prevState = JSON.parse(JSON.stringify(state));\n                Game.moveFilledCellsDown(state);\n                for(var i = 0; i < state.length; i++){\n                    for(var j = state[i].length - 1; j > 0; j--)if (state[j][i] === state[j - 1][i] && state[j][i] !== 0) {\n                        state[j][i] *= 2;\n                        state[j - 1][i] = 0;\n                        this.score += state[j][i];\n                    }\n                }\n                Game.moveFilledCellsDown(state);\n                Game.checkAfterMove(this, prevState, state);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status !== \"playing\") return;\n                var state = this.state;\n                var prevState = JSON.parse(JSON.stringify(state));\n                Game.moveFilledCellsUp(state);\n                for(var i = 0; i < state.length; i++){\n                    for(var j = 0; j < state[i].length - 1; j++)if (state[j][i] === state[j + 1][i] && state[j][i] !== 0) {\n                        state[j][i] *= 2;\n                        state[j + 1][i] = 0;\n                        this.score += state[j][i];\n                    }\n                }\n                Game.moveFilledCellsUp(state);\n                Game.checkAfterMove(this, prevState, state);\n            }\n        }\n    ], [\n        {\n            key: \"getFreeCells\",\n            value: function getFreeCells(state) {\n                var _loop = function(i) {\n                    var row = state[i];\n                    if (row.some(function(el) {\n                        return el === 0;\n                    })) {\n                        for(var j = 0; j < row.length; j++)if (row[j] === 0) freeCells.push([\n                            i,\n                            j\n                        ]);\n                    }\n                };\n                var freeCells = [];\n                for(var i = 0; i < state.length; i++)_loop(i);\n                return freeCells;\n            }\n        },\n        {\n            key: \"fillRandomCell\",\n            value: function fillRandomCell(state) {\n                var freeCells = Game.getFreeCells(state);\n                var freeCellsLength = freeCells.length;\n                if (freeCellsLength === 0) return;\n                var _freeCells_getRandomIndex = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(freeCells[$3d28d7f1aac198f5$var$getRandomIndex(freeCellsLength)], 2), row = _freeCells_getRandomIndex[0], column = _freeCells_getRandomIndex[1];\n                state[row][column] = $3d28d7f1aac198f5$var$createFreeNumber(2, 4);\n            }\n        },\n        {\n            key: \"moveFilledCellsRight\",\n            value: function moveFilledCellsRight(state) {\n                state.forEach(function(row, ind) {\n                    var filledCells = row.filter(function(x) {\n                        return x !== 0;\n                    });\n                    var emptyCells = Array(row.length - filledCells.length).fill(0);\n                    state[ind] = emptyCells.concat(filledCells);\n                });\n            }\n        },\n        {\n            key: \"moveFilledCellsLeft\",\n            value: function moveFilledCellsLeft(state) {\n                state.forEach(function(row, ind) {\n                    var filledCells = row.filter(function(x) {\n                        return x !== 0;\n                    });\n                    var emptyCells = Array(row.length - filledCells.length).fill(0);\n                    state[ind] = filledCells.concat(emptyCells);\n                });\n            }\n        },\n        {\n            key: \"moveFilledCellsDown\",\n            value: function moveFilledCellsDown(state) {\n                for(var i = 0; i < state.length; i++){\n                    var stackFilled = [];\n                    var stackEmpty = [];\n                    for(var j = 0; j < state[i].length; j++)if (state[j][i] === 0) stackEmpty.push(state[j][i]);\n                    else stackFilled.push(state[j][i]);\n                    var fullStack = stackEmpty.concat(stackFilled);\n                    if (stackEmpty.length) for(var j1 = 0; j1 < state[i].length; j1++)state[j1][i] = fullStack[j1];\n                }\n            }\n        },\n        {\n            key: \"moveFilledCellsUp\",\n            value: function moveFilledCellsUp(state) {\n                for(var i = 0; i < state.length; i++){\n                    var stackFilled = [];\n                    var stackEmpty = [];\n                    for(var j = 0; j < state[i].length; j++)if (state[j][i] === 0) stackEmpty.push(state[j][i]);\n                    else stackFilled.push(state[j][i]);\n                    var fullStack = stackFilled.concat(stackEmpty);\n                    if (stackEmpty.length) for(var j1 = 0; j1 < state[i].length; j1++)state[j1][i] = fullStack[j1];\n                }\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove(state) {\n                for(var i = 0; i < state.length; i++){\n                    var row = state[i];\n                    for(var j = 0; j < row.length - 1; j++){\n                        if (row[j] === row[j + 1]) return true;\n                        if (state[j][i] === state[j + 1][i]) return true;\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"isstateChanged\",\n            value: function isstateChanged(prevState, newstate) {\n                var isChanged = false;\n                prevState.forEach(function(row, rowInd) {\n                    var equal = row.every(function(val, valInd) {\n                        return newstate[rowInd][valInd] === val;\n                    });\n                    if (!equal) isChanged = true;\n                });\n                return isChanged;\n            }\n        },\n        {\n            key: \"checkStatus\",\n            value: function checkStatus(game) {\n                var state = game.state;\n                state.forEach(function(row) {\n                    if (row.some(function(el) {\n                        return el === 2048;\n                    })) game.status = \"win\";\n                });\n                var freeCells = Game.getFreeCells(state);\n                if (!Game.canMove(state) && freeCells.length === 0) game.status = \"lose\";\n            }\n        },\n        {\n            key: \"checkAfterMove\",\n            value: function checkAfterMove(game, prevState, state) {\n                if (Game.isstateChanged(prevState, state)) Game.fillRandomCell(state);\n                Game.checkStatus(game);\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$playBtn = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$msgStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$msgWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$msgLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$playground = new $3d28d7f1aac198f5$exports();\n$197cd56b15c33885$var$updateTableStyles();\nvar $197cd56b15c33885$var$keyDownHandler = function(e) {\n    switch(e.code){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$playground.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$playground.moveRight();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$playground.moveDown();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$playground.moveUp();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$updateStyles();\n};\nfunction $197cd56b15c33885$var$updateButtonText(button) {\n    button.textContent = button.classList.contains(\"start\") ? \"Start\" : \"Restart\";\n}\nfunction $197cd56b15c33885$var$toggleButtonClasses(button) {\n    button.classList.toggle(\"start\");\n    button.classList.toggle(\"restart\");\n    $197cd56b15c33885$var$updateButtonText(button);\n}\n$197cd56b15c33885$var$playBtn.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$playBtn.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$startGame();\n        $197cd56b15c33885$var$msgStart.classList.add(\"hidden\");\n        document.addEventListener(\"keydown\", $197cd56b15c33885$var$keyDownHandler);\n    } else {\n        $197cd56b15c33885$var$restartGame();\n        $197cd56b15c33885$var$msgStart.classList.remove(\"hidden\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$keyDownHandler);\n    }\n    $197cd56b15c33885$var$toggleButtonClasses($197cd56b15c33885$var$playBtn);\n});\nfunction $197cd56b15c33885$var$updateTableStyles() {\n    var table = document.querySelector(\".game-field\");\n    var tableRows = table.rows;\n    var state = $197cd56b15c33885$var$playground.state;\n    for(var i = 0; i < state.length; i++){\n        var gridRow = state[i];\n        for(var j = 0; j < gridRow.length; j++)if (!gridRow[j]) {\n            tableRows[i].cells[j].textContent = \"\";\n            tableRows[i].cells[j].className = \"field-cell\";\n        } else {\n            var tableTd = tableRows[i].cells[j];\n            var gridValue = gridRow[j];\n            tableTd.textContent = gridValue;\n            tableTd.className = \"field-cell field-cell--\".concat(gridValue);\n        }\n    }\n}\nfunction $197cd56b15c33885$var$updateMessageStyles() {\n    switch($197cd56b15c33885$var$playground.status){\n        case \"win\":\n            $197cd56b15c33885$var$msgWin.classList.remove(\"hidden\");\n            document.removeEventListener(\"keydown\", $197cd56b15c33885$var$keyDownHandler);\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$msgLose.classList.remove(\"hidden\");\n            break;\n        default:\n            $197cd56b15c33885$var$msgLose.classList.add(\"hidden\");\n            $197cd56b15c33885$var$msgWin.classList.add(\"hidden\");\n    }\n}\nfunction $197cd56b15c33885$var$updateScoreStyles() {\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$playground.score;\n}\nfunction $197cd56b15c33885$var$updateStyles() {\n    $197cd56b15c33885$var$updateTableStyles();\n    $197cd56b15c33885$var$updateScoreStyles();\n    $197cd56b15c33885$var$updateMessageStyles();\n}\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$playground.start();\n    $197cd56b15c33885$var$updateStyles();\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$playground.restart();\n    $197cd56b15c33885$var$updateStyles();\n}\n\n})();\n//# sourceMappingURL=index.9aa7b225.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n\nconst playBtn = document.querySelector('.button');\nconst msgStart = document.querySelector('.message-start');\nconst msgWin = document.querySelector('.message-win');\nconst msgLose = document.querySelector('.message-lose');\nconst gameScore = document.querySelector('.game-score');\nconst playground = new Game();\n\nupdateTableStyles();\n\nconst keyDownHandler = (e) => {\n  switch (e.code) {\n    case 'ArrowLeft':\n      playground.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      playground.moveRight();\n      break;\n\n    case 'ArrowDown':\n      playground.moveDown();\n      break;\n\n    case 'ArrowUp':\n      playground.moveUp();\n      break;\n\n    default:\n      return;\n  }\n\n  updateStyles();\n};\n\nfunction updateButtonText(button) {\n  button.textContent = button.classList.contains('start') ? 'Start' : 'Restart';\n}\n\nfunction toggleButtonClasses(button) {\n  button.classList.toggle('start');\n  button.classList.toggle('restart');\n\n  updateButtonText(button);\n}\n\nplayBtn.addEventListener('click', () => {\n  if (playBtn.classList.contains('start')) {\n    startGame();\n\n    msgStart.classList.add('hidden');\n\n    document.addEventListener('keydown', keyDownHandler);\n  } else {\n    restartGame();\n\n    msgStart.classList.remove('hidden');\n\n    document.removeEventListener('keydown', keyDownHandler);\n  }\n\n  toggleButtonClasses(playBtn);\n});\n\nfunction updateTableStyles() {\n  const table = document.querySelector('.game-field');\n  const tableRows = table.rows;\n\n  const state = playground.state;\n\n  for (let i = 0; i < state.length; i++) {\n    const gridRow = state[i];\n\n    for (let j = 0; j < gridRow.length; j++) {\n      if (!gridRow[j]) {\n        tableRows[i].cells[j].textContent = '';\n        tableRows[i].cells[j].className = 'field-cell';\n      } else {\n        const tableTd = tableRows[i].cells[j];\n        const gridValue = gridRow[j];\n\n        tableTd.textContent = gridValue;\n        tableTd.className = `field-cell field-cell--${gridValue}`;\n      }\n    }\n  }\n}\n\nfunction updateMessageStyles() {\n  switch (playground.status) {\n    case 'win':\n      msgWin.classList.remove('hidden');\n      document.removeEventListener('keydown', keyDownHandler);\n      break;\n\n    case 'lose':\n      msgLose.classList.remove('hidden');\n      break;\n\n    default:\n      msgLose.classList.add('hidden');\n      msgWin.classList.add('hidden');\n  }\n}\n\nfunction updateScoreStyles() {\n  gameScore.textContent = playground.score;\n}\n\nfunction updateStyles() {\n  updateTableStyles();\n  updateScoreStyles();\n  updateMessageStyles();\n}\n\nfunction startGame() {\n  playground.start();\n  updateStyles();\n}\n\nfunction restartGame() {\n  playground.restart();\n  updateStyles();\n}\n","'use strict';\n\nconst { getRandomIndex, createFreeNumber } = require('./helpers');\n\nclass Game {\n  constructor(initialState) {\n    this.state = [];\n\n    if (initialState) {\n      this.state = initialState;\n    } else {\n      for (let i = 0; i < 4; i++) {\n        this.state.push(new Array(4).fill(0));\n      }\n    }\n\n    this.status = 'idle';\n    this.score = 0;\n    this.initialState = JSON.parse(JSON.stringify(this.state));\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  static getFreeCells(state) {\n    const freeCells = [];\n\n    for (let i = 0; i < state.length; i++) {\n      const row = state[i];\n\n      if (row.some((el) => el === 0)) {\n        for (let j = 0; j < row.length; j++) {\n          if (row[j] === 0) {\n            freeCells.push([i, j]);\n          }\n        }\n      }\n    }\n\n    return freeCells;\n  }\n\n  static fillRandomCell(state) {\n    const freeCells = Game.getFreeCells(state);\n    const freeCellsLength = freeCells.length;\n\n    if (freeCellsLength === 0) {\n      return;\n    }\n\n    const [row, column] = freeCells[getRandomIndex(freeCellsLength)];\n\n    state[row][column] = createFreeNumber(2, 4);\n  }\n\n  static moveFilledCellsRight(state) {\n    state.forEach((row, ind) => {\n      const filledCells = row.filter((x) => x !== 0);\n\n      const emptyCells = Array(row.length - filledCells.length).fill(0);\n\n      state[ind] = emptyCells.concat(filledCells);\n    });\n  }\n\n  static moveFilledCellsLeft(state) {\n    state.forEach((row, ind) => {\n      const filledCells = row.filter((x) => x !== 0);\n\n      const emptyCells = Array(row.length - filledCells.length).fill(0);\n\n      state[ind] = filledCells.concat(emptyCells);\n    });\n  }\n\n  static moveFilledCellsDown(state) {\n    for (let i = 0; i < state.length; i++) {\n      const stackFilled = [];\n      const stackEmpty = [];\n\n      for (let j = 0; j < state[i].length; j++) {\n        if (state[j][i] === 0) {\n          stackEmpty.push(state[j][i]);\n        } else {\n          stackFilled.push(state[j][i]);\n        }\n      }\n\n      const fullStack = stackEmpty.concat(stackFilled);\n\n      if (stackEmpty.length) {\n        for (let j = 0; j < state[i].length; j++) {\n          state[j][i] = fullStack[j];\n        }\n      }\n    }\n  }\n\n  static moveFilledCellsUp(state) {\n    for (let i = 0; i < state.length; i++) {\n      const stackFilled = [];\n      const stackEmpty = [];\n\n      for (let j = 0; j < state[i].length; j++) {\n        if (state[j][i] === 0) {\n          stackEmpty.push(state[j][i]);\n        } else {\n          stackFilled.push(state[j][i]);\n        }\n      }\n\n      const fullStack = stackFilled.concat(stackEmpty);\n\n      if (stackEmpty.length) {\n        for (let j = 0; j < state[i].length; j++) {\n          state[j][i] = fullStack[j];\n        }\n      }\n    }\n  }\n\n  static canMove(state) {\n    for (let i = 0; i < state.length; i++) {\n      const row = state[i];\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1]) {\n          return true;\n        }\n\n        if (state[j][i] === state[j + 1][i]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  static isstateChanged(prevState, newstate) {\n    let isChanged = false;\n\n    prevState.forEach((row, rowInd) => {\n      const equal = row.every(\n        (val, valInd) => newstate[rowInd][valInd] === val,\n      );\n\n      if (!equal) {\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  }\n\n  static checkStatus(game) {\n    const state = game.state;\n\n    state.forEach((row) => {\n      if (row.some((el) => el === 2048)) {\n        game.status = 'win';\n      }\n    });\n\n    const freeCells = Game.getFreeCells(state);\n\n    if (!Game.canMove(state) && freeCells.length === 0) {\n      game.status = 'lose';\n    }\n  }\n\n  static checkAfterMove(game, prevState, state) {\n    if (Game.isstateChanged(prevState, state)) {\n      Game.fillRandomCell(state);\n    }\n\n    Game.checkStatus(game);\n  }\n\n  start() {\n    this.status = 'playing';\n\n    for (let i = 0; i < 2; i++) {\n      Game.fillRandomCell(this.state);\n    }\n  }\n\n  restart() {\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const state = this.state;\n    const prevState = JSON.parse(JSON.stringify(state));\n\n    Game.moveFilledCellsRight(state);\n\n    for (let i = 0; i < state.length; i++) {\n      const row = state[i];\n\n      for (let j = row.length - 1; j > 0; j--) {\n        if (row[j] === row[j - 1] && row[j] !== 0) {\n          row[j - 1] = 0;\n          row[j] *= 2;\n\n          this.score += row[j];\n        }\n      }\n    }\n\n    Game.moveFilledCellsRight(state);\n    Game.checkAfterMove(this, prevState, state);\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const state = this.state;\n    const prevState = JSON.parse(JSON.stringify(state));\n\n    Game.moveFilledCellsLeft(state);\n\n    for (let i = 0; i < state.length; i++) {\n      const row = state[i];\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1] && row[j] !== 0) {\n          row[j] *= 2;\n          row[j + 1] = 0;\n\n          this.score += row[j];\n        }\n      }\n    }\n\n    Game.moveFilledCellsLeft(state);\n    Game.checkAfterMove(this, prevState, state);\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const state = this.state;\n    const prevState = JSON.parse(JSON.stringify(state));\n\n    Game.moveFilledCellsDown(state);\n\n    for (let i = 0; i < state.length; i++) {\n      for (let j = state[i].length - 1; j > 0; j--) {\n        if (state[j][i] === state[j - 1][i] && state[j][i] !== 0) {\n          state[j][i] *= 2;\n          state[j - 1][i] = 0;\n\n          this.score += state[j][i];\n        }\n      }\n    }\n\n    Game.moveFilledCellsDown(state);\n    Game.checkAfterMove(this, prevState, state);\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const state = this.state;\n    const prevState = JSON.parse(JSON.stringify(state));\n\n    Game.moveFilledCellsUp(state);\n\n    for (let i = 0; i < state.length; i++) {\n      for (let j = 0; j < state[i].length - 1; j++) {\n        if (state[j][i] === state[j + 1][i] && state[j][i] !== 0) {\n          state[j][i] *= 2;\n          state[j + 1][i] = 0;\n\n          this.score += state[j][i];\n        }\n      }\n    }\n\n    Game.moveFilledCellsUp(state);\n    Game.checkAfterMove(this, prevState, state);\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","'use strict';\n\nfunction getRandomIndex(num) {\n  return Math.floor(Math.random() * num);\n}\n\nfunction createFreeNumber(min, max) {\n  return Math.random() < 0.9 ? min : max;\n}\n\nmodule.exports = {\n  getRandomIndex,\n  createFreeNumber,\n};\n"],"names":["$3d28d7f1aac198f5$exports","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$9ad875e4360a0fe3$exports","$3d28d7f1aac198f5$var$getRandomIndex","getRandomIndex","num","Math","floor","random","createFreeNumber","min","max","$3d28d7f1aac198f5$var$createFreeNumber","protoProps","staticProps","Game","initialState","instance","Constructor","TypeError","state","push","fill","status","score","JSON","parse","stringify","value","fillRandomCell","prevState","moveFilledCellsRight","row","j","checkAfterMove","moveFilledCellsLeft","moveFilledCellsDown","moveFilledCellsUp","freeCells","_loop","some","el","getFreeCells","freeCellsLength","_freeCells_getRandomIndex","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","n","prototype","toString","slice","constructor","name","from","test","column","forEach","ind","filledCells","filter","x","emptyCells","concat","stackFilled","stackEmpty","fullStack","j1","newstate","isChanged","rowInd","every","val","valInd","game","canMove","isstateChanged","checkStatus","$197cd56b15c33885$var$playBtn","document","querySelector","$197cd56b15c33885$var$msgStart","$197cd56b15c33885$var$msgWin","$197cd56b15c33885$var$msgLose","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$playground","$197cd56b15c33885$var$updateTableStyles","$197cd56b15c33885$var$keyDownHandler","e","code","moveLeft","moveRight","moveDown","moveUp","$197cd56b15c33885$var$updateStyles","tableRows","table","rows","gridRow","tableTd","cells","gridValue","textContent","className","$197cd56b15c33885$var$updateMessageStyles","classList","remove","removeEventListener","add","addEventListener","contains","start","restart","button","toggle"],"version":3,"file":"index.9aa7b225.js.map"}